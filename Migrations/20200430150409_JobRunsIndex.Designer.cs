// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using MkeAlerts.Web.Data;
using NetTopologySuite.Geometries;

namespace MkeAlerts.Web.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20200430150409_JobRunsIndex")]
    partial class JobRunsIndex
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<System.Guid>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("RoleId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<System.Guid>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<System.Guid>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderKey")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<System.Guid>", b =>
                {
                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("RoleId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles");

                    b.HasData(
                        new
                        {
                            UserId = new Guid("85f00d40-d578-4988-9f22-4d023175f852"),
                            RoleId = new Guid("7e3f1477-2377-4e5f-b02c-a13b9795e157")
                        });
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<System.Guid>", b =>
                {
                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens");
                });

            modelBuilder.Entity("MkeAlerts.Web.Models.Data.Accounts.ApplicationRole", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(256)")
                        .HasMaxLength(256);

                    b.Property<string>("NormalizedName")
                        .HasColumnType("nvarchar(256)")
                        .HasMaxLength(256);

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasName("RoleNameIndex")
                        .HasFilter("[NormalizedName] IS NOT NULL");

                    b.ToTable("AspNetRoles");

                    b.HasData(
                        new
                        {
                            Id = new Guid("7e3f1477-2377-4e5f-b02c-a13b9795e157"),
                            ConcurrencyStamp = "71c40c78-0c61-43df-83e7-cb1b9e632474",
                            Name = "SiteAdmin",
                            NormalizedName = "SiteAdmin"
                        });
                });

            modelBuilder.Entity("MkeAlerts.Web.Models.Data.Accounts.ApplicationUser", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(256)")
                        .HasMaxLength(256);

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("FirstName")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("LastName")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("NormalizedEmail")
                        .HasColumnType("nvarchar(256)")
                        .HasMaxLength(256);

                    b.Property<string>("NormalizedUserName")
                        .HasColumnType("nvarchar(256)")
                        .HasMaxLength(256);

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("UserName")
                        .HasColumnType("nvarchar(256)")
                        .HasMaxLength(256);

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasName("UserNameIndex")
                        .HasFilter("[NormalizedUserName] IS NOT NULL");

                    b.ToTable("AspNetUsers");

                    b.HasData(
                        new
                        {
                            Id = new Guid("85f00d40-d578-4988-9f22-4d023175f852"),
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "0fd0740c-fce2-4b8c-b931-399f050cb151",
                            Email = "cwilson@mkealerts.com",
                            EmailConfirmed = true,
                            LockoutEnabled = false,
                            NormalizedEmail = "cwilson@mkealerts.com",
                            NormalizedUserName = "cwilson@mkealerts.com",
                            PasswordHash = "AQAAAAEAACcQAAAAEG6YLwdEWtIWX9wYQznyMXz5hIF7YBh8VQSKAyARIVkwSQPSv7NHbitOuaaeo2EwDg==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "",
                            TwoFactorEnabled = false,
                            UserName = "cwilson@mkealerts.com"
                        });
                });

            modelBuilder.Entity("MkeAlerts.Web.Models.Data.Accounts.ExternalCredential", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ApplicationUserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ExternalId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Provider")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("ApplicationUserId");

                    b.ToTable("ExternalCredentials");
                });

            modelBuilder.Entity("MkeAlerts.Web.Models.Data.AppHealth.JobRun", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTimeOffset?>("EndTime")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("ErrorMessages")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ErrorStackTrace")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("FailureCount")
                        .HasColumnType("int");

                    b.Property<string>("JobName")
                        .HasColumnType("nvarchar(40)")
                        .HasMaxLength(40);

                    b.Property<DateTimeOffset>("StartTime")
                        .HasColumnType("datetimeoffset");

                    b.Property<int>("SuccessCount")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("StartTime");

                    b.ToTable("JobRuns");
                });

            modelBuilder.Entity("MkeAlerts.Web.Models.Data.Incidents.Crime", b =>
                {
                    b.Property<string>("IncidentNum")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<decimal>("ALD")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("Arson")
                        .HasColumnType("int");

                    b.Property<int>("AssaultOffense")
                        .HasColumnType("int");

                    b.Property<int>("Burglary")
                        .HasColumnType("int");

                    b.Property<int>("CriminalDamage")
                        .HasColumnType("int");

                    b.Property<int>("Homicide")
                        .HasColumnType("int");

                    b.Property<string>("Location")
                        .HasColumnType("nvarchar(128)")
                        .HasMaxLength(128);

                    b.Property<int>("LockedVehicle")
                        .HasColumnType("int");

                    b.Property<decimal>("MaxLat")
                        .HasColumnType("decimal(13, 10)");

                    b.Property<decimal>("MaxLng")
                        .HasColumnType("decimal(13, 10)");

                    b.Property<decimal>("MinLat")
                        .HasColumnType("decimal(13, 10)");

                    b.Property<decimal>("MinLng")
                        .HasColumnType("decimal(13, 10)");

                    b.Property<decimal>("NSP")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("POLICE")
                        .HasColumnType("decimal(18,2)");

                    b.Property<Point>("Point")
                        .HasColumnType("geography");

                    b.Property<DateTime>("ReportedDateTime")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("ReportedMonth")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("ReportedYear")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("Robbery")
                        .HasColumnType("int");

                    b.Property<double>("RoughX")
                        .HasColumnType("float");

                    b.Property<double>("RoughY")
                        .HasColumnType("float");

                    b.Property<int>("SexOffense")
                        .HasColumnType("int");

                    b.Property<decimal>("TRACT")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("Theft")
                        .HasColumnType("int");

                    b.Property<int>("VehicleTheft")
                        .HasColumnType("int");

                    b.Property<decimal>("WARD")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("WeaponUsed")
                        .HasColumnType("nvarchar(128)")
                        .HasMaxLength(128);

                    b.Property<decimal>("ZIP")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("IncidentNum");

                    b.HasIndex("ReportedDateTime");

                    b.ToTable("Crimes");
                });

            modelBuilder.Entity("MkeAlerts.Web.Models.Data.Incidents.FireDispatchCall", b =>
                {
                    b.Property<string>("CFS")
                        .HasColumnType("nvarchar(12)")
                        .HasMaxLength(12);

                    b.Property<int>("Accuracy")
                        .HasColumnType("int");

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("nvarchar(60)")
                        .HasMaxLength(60);

                    b.Property<string>("Apt")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("City")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("Disposition")
                        .HasColumnType("nvarchar(60)")
                        .HasMaxLength(60);

                    b.Property<Geometry>("Geometry")
                        .HasColumnType("geography");

                    b.Property<decimal>("MaxLat")
                        .HasColumnType("decimal(13, 10)");

                    b.Property<decimal>("MaxLng")
                        .HasColumnType("decimal(13, 10)");

                    b.Property<decimal>("MinLat")
                        .HasColumnType("decimal(13, 10)");

                    b.Property<decimal>("MinLng")
                        .HasColumnType("decimal(13, 10)");

                    b.Property<string>("NatureOfCall")
                        .IsRequired()
                        .HasColumnType("nvarchar(40)")
                        .HasMaxLength(40);

                    b.Property<DateTime>("ReportedDateTime")
                        .HasColumnType("datetime2");

                    b.Property<int>("Source")
                        .HasColumnType("int");

                    b.HasKey("CFS");

                    b.HasIndex("ReportedDateTime");

                    b.ToTable("FireDispatchCalls");
                });

            modelBuilder.Entity("MkeAlerts.Web.Models.Data.Incidents.FireDispatchCallType", b =>
                {
                    b.Property<string>("NatureOfCall")
                        .HasColumnType("nvarchar(40)")
                        .HasMaxLength(40);

                    b.Property<bool>("IsCritical")
                        .HasColumnType("bit");

                    b.Property<bool>("IsFire")
                        .HasColumnType("bit");

                    b.Property<bool>("IsMedical")
                        .HasColumnType("bit");

                    b.HasKey("NatureOfCall");

                    b.ToTable("FireDispatchCallTypes");
                });

            modelBuilder.Entity("MkeAlerts.Web.Models.Data.Incidents.PoliceDispatchCall", b =>
                {
                    b.Property<string>("CallNumber")
                        .HasColumnType("nvarchar(12)")
                        .HasMaxLength(12);

                    b.Property<int>("Accuracy")
                        .HasColumnType("int");

                    b.Property<int>("District")
                        .HasColumnType("int");

                    b.Property<Geometry>("Geometry")
                        .HasColumnType("geography");

                    b.Property<string>("Location")
                        .IsRequired()
                        .HasColumnType("nvarchar(60)")
                        .HasMaxLength(60);

                    b.Property<decimal>("MaxLat")
                        .HasColumnType("decimal(13, 10)");

                    b.Property<decimal>("MaxLng")
                        .HasColumnType("decimal(13, 10)");

                    b.Property<decimal>("MinLat")
                        .HasColumnType("decimal(13, 10)");

                    b.Property<decimal>("MinLng")
                        .HasColumnType("decimal(13, 10)");

                    b.Property<string>("NatureOfCall")
                        .IsRequired()
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<DateTime>("ReportedDateTime")
                        .HasColumnType("datetime2");

                    b.Property<int>("Source")
                        .HasColumnType("int");

                    b.Property<string>("Status")
                        .HasColumnType("nvarchar(60)")
                        .HasMaxLength(60);

                    b.HasKey("CallNumber");

                    b.HasIndex("ReportedDateTime");

                    b.ToTable("PoliceDispatchCalls");
                });

            modelBuilder.Entity("MkeAlerts.Web.Models.Data.Incidents.PoliceDispatchCallType", b =>
                {
                    b.Property<string>("NatureOfCall")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<bool>("IsCritical")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDrug")
                        .HasColumnType("bit");

                    b.Property<bool>("IsOtherCrime")
                        .HasColumnType("bit");

                    b.Property<bool>("IsProperty")
                        .HasColumnType("bit");

                    b.Property<bool>("IsTraffic")
                        .HasColumnType("bit");

                    b.Property<bool>("IsViolent")
                        .HasColumnType("bit");

                    b.HasKey("NatureOfCall");

                    b.ToTable("PoliceDispatchCallTypes");
                });

            modelBuilder.Entity("MkeAlerts.Web.Models.Data.Places.Address", b =>
                {
                    b.Property<string>("RCD_NBR")
                        .HasColumnType("nvarchar(10)")
                        .HasMaxLength(10);

                    b.Property<string>("DIR")
                        .HasColumnType("nvarchar(1)")
                        .HasMaxLength(1);

                    b.Property<int>("HSE_NBR")
                        .HasColumnType("int");

                    b.Property<int>("LAND_USE")
                        .HasColumnType("int");

                    b.Property<int>("MAIL_ERROR_COUNT")
                        .HasColumnType("int");

                    b.Property<string>("MAIL_STATUS")
                        .HasColumnType("nvarchar(1)")
                        .HasMaxLength(1);

                    b.Property<string>("RES_COM_FLAG")
                        .HasColumnType("nvarchar(1)")
                        .HasMaxLength(1);

                    b.Property<string>("SFX")
                        .HasColumnType("nvarchar(3)")
                        .HasMaxLength(3);

                    b.Property<string>("STREET")
                        .HasColumnType("nvarchar(18)")
                        .HasMaxLength(18);

                    b.Property<string>("STTYPE")
                        .HasColumnType("nvarchar(2)")
                        .HasMaxLength(2);

                    b.Property<string>("TAXKEY")
                        .HasColumnType("nvarchar(10)")
                        .HasMaxLength(10);

                    b.Property<string>("UNIT_NBR")
                        .HasColumnType("nvarchar(5)")
                        .HasMaxLength(5);

                    b.Property<int>("UPD_DATE")
                        .HasColumnType("int");

                    b.Property<int>("WARD")
                        .HasColumnType("int");

                    b.Property<string>("ZIP_CODE")
                        .HasColumnType("nvarchar(9)")
                        .HasMaxLength(9);

                    b.HasKey("RCD_NBR");

                    b.HasIndex("TAXKEY");

                    b.ToTable("Addresses");
                });

            modelBuilder.Entity("MkeAlerts.Web.Models.Data.Places.CommonParcel", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal>("MaxLat")
                        .HasColumnType("decimal(13, 10)");

                    b.Property<decimal>("MaxLng")
                        .HasColumnType("decimal(13, 10)");

                    b.Property<decimal>("MinLat")
                        .HasColumnType("decimal(13, 10)");

                    b.Property<decimal>("MinLng")
                        .HasColumnType("decimal(13, 10)");

                    b.Property<Geometry>("Outline")
                        .HasColumnType("geography");

                    b.HasKey("Id");

                    b.HasIndex("MaxLat");

                    b.HasIndex("MaxLng");

                    b.HasIndex("MinLat");

                    b.HasIndex("MinLng");

                    b.ToTable("CommonParcels");
                });

            modelBuilder.Entity("MkeAlerts.Web.Models.Data.Places.Parcel", b =>
                {
                    b.Property<string>("Taxkey")
                        .HasColumnType("nvarchar(10)")
                        .HasMaxLength(10);

                    b.Property<string>("ATTIC")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("ActivatedD")
                        .HasColumnType("datetime2");

                    b.Property<int>("AlternateS")
                        .HasColumnType("int");

                    b.Property<string>("AsmtChan_1")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AsmtChange")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BASEMENT")
                        .HasColumnType("nvarchar(max)");

                    b.Property<float>("BLDG_AREA")
                        .HasColumnType("real");

                    b.Property<string>("BuildingTy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<float>("CONVEY_FEE")
                        .HasColumnType("real");

                    b.Property<float>("Calculat_1")
                        .HasColumnType("real");

                    b.Property<float>("Calculated")
                        .HasColumnType("real");

                    b.Property<int>("ComDiv")
                        .HasColumnType("int");

                    b.Property<string>("Comments")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Commercial")
                        .HasColumnType("int");

                    b.Property<Guid>("CommonParcelId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CondoName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CondoType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CondoUnitT")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CurrentYea")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Deed")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DistrictNa")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("FK_Histori")
                        .HasColumnType("int");

                    b.Property<int>("FK_LandUse")
                        .HasColumnType("int");

                    b.Property<int>("FK_Naics")
                        .HasColumnType("int");

                    b.Property<int>("FK_Parcel")
                        .HasColumnType("int");

                    b.Property<string>("FK_Zoning")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("InactiveFl")
                        .HasColumnType("int");

                    b.Property<string>("LandUse")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NR_STORIES")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Neighborho")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("NumberOfBe")
                        .HasColumnType("int");

                    b.Property<int>("NumberOfFi")
                        .HasColumnType("int");

                    b.Property<int>("NumberOfFu")
                        .HasColumnType("int");

                    b.Property<int>("NumberOfHa")
                        .HasColumnType("int");

                    b.Property<int>("NumberOfRo")
                        .HasColumnType("int");

                    b.Property<string>("Owner1")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Owner2")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Owner3")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("OwnerBilli")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("OwnerCityS")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("OwnerNameC")
                        .HasColumnType("datetime2");

                    b.Property<string>("OwnerZipCo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("ParcelActi")
                        .HasColumnType("datetime2");

                    b.Property<int>("ParcelType")
                        .HasColumnType("int");

                    b.Property<string>("ParkingTyp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<float>("PercentAir")
                        .HasColumnType("real");

                    b.Property<string>("PlatPage")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PrevNonExe")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PreviousEx")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PreviousYe")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Previous_1")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PrimaryJur")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PropertySt")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("RecordDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("Residentia")
                        .HasColumnType("int");

                    b.Property<string>("STTYPE")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("SaleDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("Source")
                        .HasColumnType("int");

                    b.Property<string>("StreetDire")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StreetName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StreetNu_1")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("StreetNumb")
                        .HasColumnType("int");

                    b.Property<int>("TotaPrevNo")
                        .HasColumnType("int");

                    b.Property<string>("TotalAss_1")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TotalAsses")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TotalLandE")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TotalLandV")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("TotalPre_1")
                        .HasColumnType("int");

                    b.Property<int>("TotalPrevE")
                        .HasColumnType("int");

                    b.Property<int>("TotalPrevL")
                        .HasColumnType("int");

                    b.Property<int>("TotalPrevN")
                        .HasColumnType("int");

                    b.Property<int>("TotalPrevY")
                        .HasColumnType("int");

                    b.Property<string>("TotalYar_1")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TotalYardI")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UpdatedDat")
                        .HasColumnType("datetime2");

                    b.Property<int>("YearBuilt")
                        .HasColumnType("int");

                    b.Property<string>("ZoningCFN")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Taxkey");

                    b.HasIndex("CommonParcelId");

                    b.ToTable("Parcels");
                });

            modelBuilder.Entity("MkeAlerts.Web.Models.Data.Places.Property", b =>
                {
                    b.Property<string>("TAXKEY")
                        .HasColumnType("nvarchar(10)")
                        .HasMaxLength(10);

                    b.Property<string>("AIR_CONDITIONING")
                        .HasColumnType("nvarchar(3)")
                        .HasMaxLength(3);

                    b.Property<int>("ANGLE")
                        .HasColumnType("int");

                    b.Property<string>("ATTIC")
                        .HasColumnType("nvarchar(1)")
                        .HasMaxLength(1);

                    b.Property<string>("BASEMENT")
                        .HasColumnType("nvarchar(1)")
                        .HasMaxLength(1);

                    b.Property<int>("BATHS")
                        .HasColumnType("int");

                    b.Property<int>("BEDROOMS")
                        .HasColumnType("int");

                    b.Property<string>("BI_VIOL")
                        .HasColumnType("nvarchar(4)")
                        .HasMaxLength(4);

                    b.Property<int>("BLDG_AREA")
                        .HasColumnType("int");

                    b.Property<string>("BLDG_TYPE")
                        .HasColumnType("nvarchar(9)")
                        .HasMaxLength(9);

                    b.Property<string>("CHG_NR")
                        .HasColumnType("nvarchar(6)")
                        .HasMaxLength(6);

                    b.Property<string>("CHK_DIGIT")
                        .HasColumnType("nvarchar(1)")
                        .HasMaxLength(1);

                    b.Property<DateTime>("CONVEY_DATE")
                        .HasColumnType("datetime2");

                    b.Property<float>("CONVEY_FEE")
                        .HasColumnType("real");

                    b.Property<string>("CONVEY_TYPE")
                        .HasColumnType("nvarchar(2)")
                        .HasMaxLength(2);

                    b.Property<string>("CORNER_LOT")
                        .HasColumnType("nvarchar(2)")
                        .HasMaxLength(2);

                    b.Property<string>("C_A_CLASS")
                        .HasColumnType("nvarchar(1)")
                        .HasMaxLength(1);

                    b.Property<int>("C_A_EXM_IMPRV")
                        .HasColumnType("int");

                    b.Property<int>("C_A_EXM_LAND")
                        .HasColumnType("int");

                    b.Property<int>("C_A_EXM_TOTAL")
                        .HasColumnType("int");

                    b.Property<string>("C_A_EXM_TYPE")
                        .HasColumnType("nvarchar(3)")
                        .HasMaxLength(3);

                    b.Property<int>("C_A_IMPRV")
                        .HasColumnType("int");

                    b.Property<int>("C_A_LAND")
                        .HasColumnType("int");

                    b.Property<string>("C_A_SYMBOL")
                        .HasColumnType("nvarchar(4)")
                        .HasMaxLength(4);

                    b.Property<int>("C_A_TOTAL")
                        .HasColumnType("int");

                    b.Property<int>("DIV_DROP")
                        .HasColumnType("int");

                    b.Property<int>("DIV_ORG")
                        .HasColumnType("int");

                    b.Property<string>("DPW_SANITATION")
                        .HasColumnType("nvarchar(2)")
                        .HasMaxLength(2);

                    b.Property<float>("EXM_ACREAGE")
                        .HasColumnType("real");

                    b.Property<float>("EXM_PER_CT_IMPRV")
                        .HasColumnType("real");

                    b.Property<float>("EXM_PER_CT_LAND")
                        .HasColumnType("real");

                    b.Property<string>("FIREPLACE")
                        .HasColumnType("nvarchar(1)")
                        .HasMaxLength(1);

                    b.Property<string>("GARAGE_TYPE")
                        .HasColumnType("nvarchar(2)")
                        .HasMaxLength(2);

                    b.Property<int>("GEO_ALDER")
                        .HasColumnType("int");

                    b.Property<int>("GEO_ALDER_OLD")
                        .HasColumnType("int");

                    b.Property<int>("GEO_BI_MAINT")
                        .HasColumnType("int");

                    b.Property<string>("GEO_BLOCK")
                        .HasColumnType("nvarchar(4)")
                        .HasMaxLength(4);

                    b.Property<int>("GEO_FIRE")
                        .HasColumnType("int");

                    b.Property<int>("GEO_POLICE")
                        .HasColumnType("int");

                    b.Property<int>("GEO_TRACT")
                        .HasColumnType("int");

                    b.Property<int>("GEO_ZIP_CODE")
                        .HasColumnType("int");

                    b.Property<string>("HIST_CODE")
                        .HasColumnType("nvarchar(1)")
                        .HasMaxLength(1);

                    b.Property<int>("HOUSE_NR_HI")
                        .HasColumnType("int");

                    b.Property<int>("HOUSE_NR_LO")
                        .HasColumnType("int");

                    b.Property<string>("HOUSE_NR_SFX")
                        .HasColumnType("nvarchar(3)")
                        .HasMaxLength(3);

                    b.Property<int>("LAND_USE")
                        .HasColumnType("int");

                    b.Property<int>("LAND_USE_GP")
                        .HasColumnType("int");

                    b.Property<DateTime>("LAST_NAME_CHG")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("LAST_VALUE_CHG")
                        .HasColumnType("datetime2");

                    b.Property<int>("LOT_AREA")
                        .HasColumnType("int");

                    b.Property<string>("NEIGHBORHOOD")
                        .HasColumnType("nvarchar(8)")
                        .HasMaxLength(8);

                    b.Property<string>("NR_ROOMS")
                        .HasColumnType("nvarchar(4)")
                        .HasMaxLength(4);

                    b.Property<float>("NR_STORIES")
                        .HasColumnType("real");

                    b.Property<int>("NR_UNITS")
                        .HasColumnType("int");

                    b.Property<int>("NUMBER_OF_SPACES")
                        .HasColumnType("int");

                    b.Property<string>("OWNER_CITY_STATE")
                        .HasColumnType("nvarchar(28)")
                        .HasMaxLength(28);

                    b.Property<string>("OWNER_MAIL_ADDR")
                        .HasColumnType("nvarchar(28)")
                        .HasMaxLength(28);

                    b.Property<string>("OWNER_NAME_1")
                        .HasColumnType("nvarchar(28)")
                        .HasMaxLength(28);

                    b.Property<string>("OWNER_NAME_2")
                        .HasColumnType("nvarchar(28)")
                        .HasMaxLength(28);

                    b.Property<string>("OWNER_NAME_3")
                        .HasColumnType("nvarchar(28)")
                        .HasMaxLength(28);

                    b.Property<string>("OWNER_ZIP")
                        .HasColumnType("nvarchar(9)")
                        .HasMaxLength(9);

                    b.Property<string>("OWN_OCPD")
                        .HasColumnType("nvarchar(1)")
                        .HasMaxLength(1);

                    b.Property<int>("PARKING_SPACES")
                        .HasColumnType("int");

                    b.Property<string>("PARKING_TYPE")
                        .HasColumnType("nvarchar(2)")
                        .HasMaxLength(2);

                    b.Property<int>("PLAT_PAGE")
                        .HasColumnType("int");

                    b.Property<int>("POWDER_ROOMS")
                        .HasColumnType("int");

                    b.Property<string>("P_A_CLASS")
                        .HasColumnType("nvarchar(1)")
                        .HasMaxLength(1);

                    b.Property<int>("P_A_EXM_IMPRV")
                        .HasColumnType("int");

                    b.Property<int>("P_A_EXM_LAND")
                        .HasColumnType("int");

                    b.Property<int>("P_A_EXM_TOTAL")
                        .HasColumnType("int");

                    b.Property<string>("P_A_EXM_TYPE")
                        .HasColumnType("nvarchar(3)")
                        .HasMaxLength(3);

                    b.Property<int>("P_A_IMPRV")
                        .HasColumnType("int");

                    b.Property<int>("P_A_LAND")
                        .HasColumnType("int");

                    b.Property<string>("P_A_SYMBOL")
                        .HasColumnType("nvarchar(4)")
                        .HasMaxLength(4);

                    b.Property<int>("P_A_TOTAL")
                        .HasColumnType("int");

                    b.Property<int>("RAZE_STATUS")
                        .HasColumnType("int");

                    b.Property<string>("REASON_FOR_CHG")
                        .HasColumnType("nvarchar(3)")
                        .HasMaxLength(3);

                    b.Property<string>("SDIR")
                        .HasColumnType("nvarchar(1)")
                        .HasMaxLength(1);

                    b.Property<string>("STREET")
                        .HasColumnType("nvarchar(18)")
                        .HasMaxLength(18);

                    b.Property<string>("STTYPE")
                        .HasColumnType("nvarchar(2)")
                        .HasMaxLength(2);

                    b.Property<int>("SUB_ACCT")
                        .HasColumnType("int");

                    b.Property<string>("SWIM_POOL")
                        .HasColumnType("nvarchar(1)")
                        .HasMaxLength(1);

                    b.Property<int>("TAX_DELQ")
                        .HasColumnType("int");

                    b.Property<string>("TAX_RATE_CD")
                        .HasColumnType("nvarchar(2)")
                        .HasMaxLength(2);

                    b.Property<string>("TOT_UNABATED")
                        .HasColumnType("nvarchar(4)")
                        .HasMaxLength(4);

                    b.Property<int>("YEARS_DELQ")
                        .HasColumnType("int");

                    b.Property<string>("YR_ASSMT")
                        .HasColumnType("nvarchar(4)")
                        .HasMaxLength(4);

                    b.Property<int>("YR_BUILT")
                        .HasColumnType("int");

                    b.Property<string>("ZONING")
                        .HasColumnType("nvarchar(7)")
                        .HasMaxLength(7);

                    b.HasKey("TAXKEY");

                    b.ToTable("Properties");
                });

            modelBuilder.Entity("MkeAlerts.Web.Models.Data.Places.Street", b =>
                {
                    b.Property<string>("NEWDIME_ID")
                        .HasColumnType("nvarchar(10)")
                        .HasMaxLength(10);

                    b.Property<int>("ALD2004_L")
                        .HasColumnType("int");

                    b.Property<int>("ALD2004_R")
                        .HasColumnType("int");

                    b.Property<int>("ALD_L")
                        .HasColumnType("int");

                    b.Property<int>("ALD_R")
                        .HasColumnType("int");

                    b.Property<int>("BI_CNDMN_L")
                        .HasColumnType("int");

                    b.Property<int>("BI_CNDMN_R")
                        .HasColumnType("int");

                    b.Property<int>("BI_CONST_L")
                        .HasColumnType("int");

                    b.Property<int>("BI_CONST_R")
                        .HasColumnType("int");

                    b.Property<int>("BI_ELECT_L")
                        .HasColumnType("int");

                    b.Property<int>("BI_ELECT_R")
                        .HasColumnType("int");

                    b.Property<int>("BI_ELEV_L")
                        .HasColumnType("int");

                    b.Property<int>("BI_ELEV_R")
                        .HasColumnType("int");

                    b.Property<int>("BI_PLUMB_L")
                        .HasColumnType("int");

                    b.Property<int>("BI_PLUMB_R")
                        .HasColumnType("int");

                    b.Property<int>("BI_SPRINK_")
                        .HasColumnType("int");

                    b.Property<string>("BLOCK2K_L")
                        .HasColumnType("nvarchar(4)")
                        .HasMaxLength(4);

                    b.Property<string>("BLOCK2K_R")
                        .HasColumnType("nvarchar(4)")
                        .HasMaxLength(4);

                    b.Property<string>("BLOCK_L")
                        .HasColumnType("nvarchar(4)")
                        .HasMaxLength(4);

                    b.Property<string>("BLOCK_R")
                        .HasColumnType("nvarchar(4)")
                        .HasMaxLength(4);

                    b.Property<int>("BOILER_L")
                        .HasColumnType("int");

                    b.Property<int>("BOILER_R")
                        .HasColumnType("int");

                    b.Property<string>("BROOMALL_L")
                        .HasColumnType("nvarchar(5)")
                        .HasMaxLength(5);

                    b.Property<string>("BROOMALL_R")
                        .HasColumnType("nvarchar(5)")
                        .HasMaxLength(5);

                    b.Property<string>("BROOM_L")
                        .HasColumnType("nvarchar(5)")
                        .HasMaxLength(5);

                    b.Property<string>("BROOM_R")
                        .HasColumnType("nvarchar(5)")
                        .HasMaxLength(5);

                    b.Property<string>("BUS_L")
                        .HasColumnType("nvarchar(10)")
                        .HasMaxLength(10);

                    b.Property<string>("BUS_R")
                        .HasColumnType("nvarchar(10)")
                        .HasMaxLength(10);

                    b.Property<string>("CFCC")
                        .HasColumnType("nvarchar(3)")
                        .HasMaxLength(3);

                    b.Property<string>("CIPAREA_L")
                        .HasColumnType("nvarchar(15)")
                        .HasMaxLength(15);

                    b.Property<string>("CIPAREA_R")
                        .HasColumnType("nvarchar(15)")
                        .HasMaxLength(15);

                    b.Property<string>("CNTYNAME_L")
                        .HasColumnType("nvarchar(15)")
                        .HasMaxLength(15);

                    b.Property<string>("CNTYNAME_R")
                        .HasColumnType("nvarchar(15)")
                        .HasMaxLength(15);

                    b.Property<int>("CNTYSUP_L")
                        .HasColumnType("int");

                    b.Property<int>("CNTYSUP_R")
                        .HasColumnType("int");

                    b.Property<int>("CNTY_L")
                        .HasColumnType("int");

                    b.Property<int>("CNTY_R")
                        .HasColumnType("int");

                    b.Property<string>("COMBSEW_L")
                        .HasColumnType("nvarchar(3)")
                        .HasMaxLength(3);

                    b.Property<string>("COMBSEW_R")
                        .HasColumnType("nvarchar(3)")
                        .HasMaxLength(3);

                    b.Property<int>("CONGR2K_L")
                        .HasColumnType("int");

                    b.Property<int>("CONGR2K_R")
                        .HasColumnType("int");

                    b.Property<string>("CONSERVE_L")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("CONSERVE_R")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<int>("CSUP2K_L")
                        .HasColumnType("int");

                    b.Property<int>("CSUP2K_R")
                        .HasColumnType("int");

                    b.Property<string>("DIR")
                        .HasColumnType("nvarchar(1)")
                        .HasMaxLength(1);

                    b.Property<string>("FBLOCK_L")
                        .HasColumnType("nvarchar(4)")
                        .HasMaxLength(4);

                    b.Property<string>("FBLOCK_R")
                        .HasColumnType("nvarchar(4)")
                        .HasMaxLength(4);

                    b.Property<int>("FIREBAT_L")
                        .HasColumnType("int");

                    b.Property<int>("FIREBAT_R")
                        .HasColumnType("int");

                    b.Property<int>("FMCD_L")
                        .HasColumnType("int");

                    b.Property<int>("FMCD_R")
                        .HasColumnType("int");

                    b.Property<int>("FNODE")
                        .HasColumnType("int");

                    b.Property<int>("FOODINSP_L")
                        .HasColumnType("int");

                    b.Property<int>("FOODINSP_R")
                        .HasColumnType("int");

                    b.Property<int>("FOR_BL_L")
                        .HasColumnType("int");

                    b.Property<int>("FOR_BL_R")
                        .HasColumnType("int");

                    b.Property<int>("FOR_PM_L")
                        .HasColumnType("int");

                    b.Property<int>("FOR_PM_R")
                        .HasColumnType("int");

                    b.Property<int>("FOR_TR_L")
                        .HasColumnType("int");

                    b.Property<int>("FOR_TR_R")
                        .HasColumnType("int");

                    b.Property<int>("FROM_NODE")
                        .HasColumnType("int");

                    b.Property<string>("FTRACT_L")
                        .HasColumnType("nvarchar(6)")
                        .HasMaxLength(6);

                    b.Property<string>("FTRACT_R")
                        .HasColumnType("nvarchar(6)")
                        .HasMaxLength(6);

                    b.Property<double>("HIGH_X")
                        .HasColumnType("float");

                    b.Property<double>("HIGH_Y")
                        .HasColumnType("float");

                    b.Property<int>("HI_ADD_L")
                        .HasColumnType("int");

                    b.Property<int>("HI_ADD_R")
                        .HasColumnType("int");

                    b.Property<double>("LENGTH")
                        .HasColumnType("float");

                    b.Property<int>("LEVEL")
                        .HasColumnType("int");

                    b.Property<string>("LOCDIST_L")
                        .HasColumnType("nvarchar(8)")
                        .HasMaxLength(8);

                    b.Property<string>("LOCDIST_R")
                        .HasColumnType("nvarchar(8)")
                        .HasMaxLength(8);

                    b.Property<double>("LOW_X")
                        .HasColumnType("float");

                    b.Property<double>("LOW_Y")
                        .HasColumnType("float");

                    b.Property<int>("LO_ADD_L")
                        .HasColumnType("int");

                    b.Property<int>("LO_ADD_R")
                        .HasColumnType("int");

                    b.Property<int>("LPOLY")
                        .HasColumnType("int");

                    b.Property<int>("MPS_ELEM_L")
                        .HasColumnType("int");

                    b.Property<int>("MPS_ELEM_R")
                        .HasColumnType("int");

                    b.Property<int>("MPS_HS_L")
                        .HasColumnType("int");

                    b.Property<int>("MPS_HS_R")
                        .HasColumnType("int");

                    b.Property<int>("MPS_MS_L")
                        .HasColumnType("int");

                    b.Property<int>("MPS_MS_R")
                        .HasColumnType("int");

                    b.Property<string>("MUNICODE_L")
                        .HasColumnType("nvarchar(3)")
                        .HasMaxLength(3);

                    b.Property<string>("MUNICODE_R")
                        .HasColumnType("nvarchar(3)")
                        .HasMaxLength(3);

                    b.Property<string>("MUNI_L")
                        .HasColumnType("nvarchar(15)")
                        .HasMaxLength(15);

                    b.Property<string>("MUNI_R")
                        .HasColumnType("nvarchar(15)")
                        .HasMaxLength(15);

                    b.Property<decimal>("MaxLat")
                        .HasColumnType("decimal(13, 10)");

                    b.Property<decimal>("MaxLng")
                        .HasColumnType("decimal(13, 10)");

                    b.Property<decimal>("MinLat")
                        .HasColumnType("decimal(13, 10)");

                    b.Property<decimal>("MinLng")
                        .HasColumnType("decimal(13, 10)");

                    b.Property<int>("NEWDIMENR")
                        .HasColumnType("int");

                    b.Property<Geometry>("Outline")
                        .HasColumnType("geography");

                    b.Property<int>("POLICE_L")
                        .HasColumnType("int");

                    b.Property<int>("POLICE_R")
                        .HasColumnType("int");

                    b.Property<int>("POLRD_L")
                        .HasColumnType("int");

                    b.Property<int>("POLRD_R")
                        .HasColumnType("int");

                    b.Property<string>("QTR_SECT_L")
                        .HasColumnType("nvarchar(5)")
                        .HasMaxLength(5);

                    b.Property<string>("QTR_SECT_R")
                        .HasColumnType("nvarchar(5)")
                        .HasMaxLength(5);

                    b.Property<int>("RCD_NBR")
                        .HasColumnType("int");

                    b.Property<string>("RECYC_DA_L")
                        .HasColumnType("nvarchar(3)")
                        .HasMaxLength(3);

                    b.Property<string>("RECYC_DA_R")
                        .HasColumnType("nvarchar(3)")
                        .HasMaxLength(3);

                    b.Property<string>("RECYC_SM_L")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<string>("RECYC_SM_R")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<string>("RECYC_WN_L")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<string>("RECYC_WN_R")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<int>("RPOLY")
                        .HasColumnType("int");

                    b.Property<string>("SANBIZPL_L")
                        .HasColumnType("nvarchar(10)")
                        .HasMaxLength(10);

                    b.Property<string>("SANBIZPL_R")
                        .HasColumnType("nvarchar(10)")
                        .HasMaxLength(10);

                    b.Property<string>("SANLEAF_L")
                        .HasColumnType("nvarchar(5)")
                        .HasMaxLength(5);

                    b.Property<string>("SANLEAF_R")
                        .HasColumnType("nvarchar(5)")
                        .HasMaxLength(5);

                    b.Property<string>("SANPLOW_L")
                        .HasColumnType("nvarchar(3)")
                        .HasMaxLength(3);

                    b.Property<string>("SANPLOW_R")
                        .HasColumnType("nvarchar(3)")
                        .HasMaxLength(3);

                    b.Property<string>("SAN_DIST_L")
                        .HasColumnType("nvarchar(2)")
                        .HasMaxLength(2);

                    b.Property<string>("SAN_DIST_R")
                        .HasColumnType("nvarchar(2)")
                        .HasMaxLength(2);

                    b.Property<int>("SCHOOL2K_L")
                        .HasColumnType("int");

                    b.Property<int>("SCHOOL2K_R")
                        .HasColumnType("int");

                    b.Property<int>("SCHOOL_L")
                        .HasColumnType("int");

                    b.Property<int>("SCHOOL_R")
                        .HasColumnType("int");

                    b.Property<string>("SEG_L_TYPE")
                        .HasColumnType("nvarchar(10)")
                        .HasMaxLength(10);

                    b.Property<int>("SPRINK_R")
                        .HasColumnType("int");

                    b.Property<int>("SQUAD_L")
                        .HasColumnType("int");

                    b.Property<int>("SQUAD_R")
                        .HasColumnType("int");

                    b.Property<int>("STASS2K_L")
                        .HasColumnType("int");

                    b.Property<int>("STASS2K_R")
                        .HasColumnType("int");

                    b.Property<int>("STASS_L")
                        .HasColumnType("int");

                    b.Property<int>("STASS_R")
                        .HasColumnType("int");

                    b.Property<int>("STCLASS")
                        .HasColumnType("int");

                    b.Property<string>("STREET")
                        .HasColumnType("nvarchar(18)")
                        .HasMaxLength(18);

                    b.Property<int>("STSEN2K_L")
                        .HasColumnType("int");

                    b.Property<int>("STSEN2K_R")
                        .HasColumnType("int");

                    b.Property<int>("STSEN_L")
                        .HasColumnType("int");

                    b.Property<int>("STSEN_R")
                        .HasColumnType("int");

                    b.Property<string>("STTYPE")
                        .HasColumnType("nvarchar(2)")
                        .HasMaxLength(2);

                    b.Property<string>("ST_MAIN_L")
                        .HasColumnType("nvarchar(10)")
                        .HasMaxLength(10);

                    b.Property<string>("ST_MAIN_R")
                        .HasColumnType("nvarchar(10)")
                        .HasMaxLength(10);

                    b.Property<int>("ST_OP_L")
                        .HasColumnType("int");

                    b.Property<int>("ST_OP_R")
                        .HasColumnType("int");

                    b.Property<string>("SUM_DA_L")
                        .HasColumnType("nvarchar(3)")
                        .HasMaxLength(3);

                    b.Property<string>("SUM_DA_R")
                        .HasColumnType("nvarchar(3)")
                        .HasMaxLength(3);

                    b.Property<string>("SUM_RT_L")
                        .HasColumnType("nvarchar(12)")
                        .HasMaxLength(12);

                    b.Property<string>("SUM_RT_R")
                        .HasColumnType("nvarchar(12)")
                        .HasMaxLength(12);

                    b.Property<int>("TNODE")
                        .HasColumnType("int");

                    b.Property<int>("TO_NODE")
                        .HasColumnType("int");

                    b.Property<int>("TRACT2K_L")
                        .HasColumnType("int");

                    b.Property<int>("TRACT2K_R")
                        .HasColumnType("int");

                    b.Property<int>("TRACT_L")
                        .HasColumnType("int");

                    b.Property<int>("TRACT_R")
                        .HasColumnType("int");

                    b.Property<int>("TRANS_ID")
                        .HasColumnType("int");

                    b.Property<int>("WARD2K_L")
                        .HasColumnType("int");

                    b.Property<int>("WARD2K_R")
                        .HasColumnType("int");

                    b.Property<int>("WARD_L")
                        .HasColumnType("int");

                    b.Property<int>("WARD_R")
                        .HasColumnType("int");

                    b.Property<string>("WIN_RT_L")
                        .HasColumnType("nvarchar(12)")
                        .HasMaxLength(12);

                    b.Property<string>("WIN_RT_R")
                        .HasColumnType("nvarchar(12)")
                        .HasMaxLength(12);

                    b.Property<string>("WTR16TH_L")
                        .HasColumnType("nvarchar(5)")
                        .HasMaxLength(5);

                    b.Property<string>("WTR16TH_R")
                        .HasColumnType("nvarchar(5)")
                        .HasMaxLength(5);

                    b.Property<int>("WW_PRES_L")
                        .HasColumnType("int");

                    b.Property<int>("WW_PRES_R")
                        .HasColumnType("int");

                    b.Property<int>("WW_ROUT_L")
                        .HasColumnType("int");

                    b.Property<int>("WW_ROUT_R")
                        .HasColumnType("int");

                    b.Property<int>("WW_SERV_L")
                        .HasColumnType("int");

                    b.Property<int>("WW_SERV_R")
                        .HasColumnType("int");

                    b.Property<int>("ZIP_L")
                        .HasColumnType("int");

                    b.Property<int>("ZIP_R")
                        .HasColumnType("int");

                    b.HasKey("NEWDIME_ID");

                    b.ToTable("Streets");
                });

            modelBuilder.Entity("MkeAlerts.Web.Models.Data.Subscriptions.DispatchCallSubscription", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ApplicationUserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("DispatchCallType")
                        .HasColumnType("int");

                    b.Property<int>("Distance")
                        .HasColumnType("int");

                    b.Property<int>("HOUSE_NR")
                        .HasColumnType("int");

                    b.Property<Point>("Point")
                        .HasColumnType("geography");

                    b.Property<string>("SDIR")
                        .HasColumnType("nvarchar(1)")
                        .HasMaxLength(1);

                    b.Property<string>("STREET")
                        .HasColumnType("nvarchar(18)")
                        .HasMaxLength(18);

                    b.Property<string>("STTYPE")
                        .HasColumnType("nvarchar(2)")
                        .HasMaxLength(2);

                    b.HasKey("Id");

                    b.HasIndex("ApplicationUserId");

                    b.ToTable("DispatchCallSubscriptions");
                });

            modelBuilder.Entity("MkeAlerts.Web.Models.Data.Subscriptions.PickupDatesSubscription", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ApplicationUserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("HoursBefore")
                        .HasColumnType("int");

                    b.Property<string>("LADDR")
                        .HasColumnType("nvarchar(10)")
                        .HasMaxLength(10);

                    b.Property<DateTime?>("NextGarbagePickupDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("NextGarbagePickupNotification")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("NextRecyclingPickupDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("NextRecyclingPickupNotification")
                        .HasColumnType("datetime2");

                    b.Property<string>("SDIR")
                        .HasColumnType("nvarchar(1)")
                        .HasMaxLength(1);

                    b.Property<string>("SNAME")
                        .HasColumnType("nvarchar(18)")
                        .HasMaxLength(18);

                    b.Property<string>("STYPE")
                        .HasColumnType("nvarchar(2)")
                        .HasMaxLength(2);

                    b.HasKey("Id");

                    b.HasIndex("ApplicationUserId");

                    b.ToTable("PickupDateSubscriptions");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<System.Guid>", b =>
                {
                    b.HasOne("MkeAlerts.Web.Models.Data.Accounts.ApplicationRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<System.Guid>", b =>
                {
                    b.HasOne("MkeAlerts.Web.Models.Data.Accounts.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<System.Guid>", b =>
                {
                    b.HasOne("MkeAlerts.Web.Models.Data.Accounts.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<System.Guid>", b =>
                {
                    b.HasOne("MkeAlerts.Web.Models.Data.Accounts.ApplicationRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MkeAlerts.Web.Models.Data.Accounts.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<System.Guid>", b =>
                {
                    b.HasOne("MkeAlerts.Web.Models.Data.Accounts.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("MkeAlerts.Web.Models.Data.Accounts.ExternalCredential", b =>
                {
                    b.HasOne("MkeAlerts.Web.Models.Data.Accounts.ApplicationUser", "ApplicationUser")
                        .WithMany("ExternalCredentials")
                        .HasForeignKey("ApplicationUserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("MkeAlerts.Web.Models.Data.Places.Address", b =>
                {
                    b.HasOne("MkeAlerts.Web.Models.Data.Places.Property", "Property")
                        .WithMany("Addresses")
                        .HasForeignKey("TAXKEY");
                });

            modelBuilder.Entity("MkeAlerts.Web.Models.Data.Places.Parcel", b =>
                {
                    b.HasOne("MkeAlerts.Web.Models.Data.Places.CommonParcel", "CommonParcel")
                        .WithMany("Parcels")
                        .HasForeignKey("CommonParcelId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MkeAlerts.Web.Models.Data.Places.Property", "Property")
                        .WithOne("Parcel")
                        .HasForeignKey("MkeAlerts.Web.Models.Data.Places.Parcel", "Taxkey")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("MkeAlerts.Web.Models.Data.Subscriptions.DispatchCallSubscription", b =>
                {
                    b.HasOne("MkeAlerts.Web.Models.Data.Accounts.ApplicationUser", "ApplicationUser")
                        .WithMany("DispatchCallSubscriptions")
                        .HasForeignKey("ApplicationUserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("MkeAlerts.Web.Models.Data.Subscriptions.PickupDatesSubscription", b =>
                {
                    b.HasOne("MkeAlerts.Web.Models.Data.Accounts.ApplicationUser", "ApplicationUser")
                        .WithMany("PickupDateSubscriptions")
                        .HasForeignKey("ApplicationUserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
