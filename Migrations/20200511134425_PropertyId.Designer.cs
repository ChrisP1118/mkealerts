// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using MkeAlerts.Web.Data;
using NetTopologySuite.Geometries;

namespace MkeAlerts.Web.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20200511134425_PropertyId")]
    partial class PropertyId
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<System.Guid>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("RoleId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<System.Guid>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<System.Guid>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderKey")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<System.Guid>", b =>
                {
                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("RoleId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles");

                    b.HasData(
                        new
                        {
                            UserId = new Guid("85f00d40-d578-4988-9f22-4d023175f852"),
                            RoleId = new Guid("7e3f1477-2377-4e5f-b02c-a13b9795e157")
                        });
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<System.Guid>", b =>
                {
                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens");
                });

            modelBuilder.Entity("MkeAlerts.Web.Models.Data.Accounts.ApplicationRole", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(256)")
                        .HasMaxLength(256);

                    b.Property<string>("NormalizedName")
                        .HasColumnType("nvarchar(256)")
                        .HasMaxLength(256);

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasName("RoleNameIndex")
                        .HasFilter("[NormalizedName] IS NOT NULL");

                    b.ToTable("AspNetRoles");

                    b.HasData(
                        new
                        {
                            Id = new Guid("7e3f1477-2377-4e5f-b02c-a13b9795e157"),
                            ConcurrencyStamp = "a09bf2be-7b0b-484a-91b0-375794e79457",
                            Name = "SiteAdmin",
                            NormalizedName = "SiteAdmin"
                        });
                });

            modelBuilder.Entity("MkeAlerts.Web.Models.Data.Accounts.ApplicationUser", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(256)")
                        .HasMaxLength(256);

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("FirstName")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("LastName")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("NormalizedEmail")
                        .HasColumnType("nvarchar(256)")
                        .HasMaxLength(256);

                    b.Property<string>("NormalizedUserName")
                        .HasColumnType("nvarchar(256)")
                        .HasMaxLength(256);

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("UserName")
                        .HasColumnType("nvarchar(256)")
                        .HasMaxLength(256);

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasName("UserNameIndex")
                        .HasFilter("[NormalizedUserName] IS NOT NULL");

                    b.ToTable("AspNetUsers");

                    b.HasData(
                        new
                        {
                            Id = new Guid("85f00d40-d578-4988-9f22-4d023175f852"),
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "f1ee38ab-c196-4429-a2cd-9d575e6b560c",
                            Email = "cwilson@mkealerts.com",
                            EmailConfirmed = true,
                            LockoutEnabled = false,
                            NormalizedEmail = "cwilson@mkealerts.com",
                            NormalizedUserName = "cwilson@mkealerts.com",
                            PasswordHash = "AQAAAAEAACcQAAAAEGaHlTBP4+iH+4glqZa7jZAqCtRmjbqomtl53Lx5xMklxWgMr0tFiRFzp5qGYA8OoA==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "",
                            TwoFactorEnabled = false,
                            UserName = "cwilson@mkealerts.com"
                        });
                });

            modelBuilder.Entity("MkeAlerts.Web.Models.Data.Accounts.ExternalCredential", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ApplicationUserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ExternalId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Provider")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("ApplicationUserId");

                    b.ToTable("ExternalCredentials");
                });

            modelBuilder.Entity("MkeAlerts.Web.Models.Data.AppHealth.JobRun", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTimeOffset?>("EndTime")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("ErrorMessages")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ErrorStackTrace")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("FailureCount")
                        .HasColumnType("int");

                    b.Property<string>("JobName")
                        .HasColumnType("nvarchar(40)")
                        .HasMaxLength(40);

                    b.Property<DateTimeOffset>("StartTime")
                        .HasColumnType("datetimeoffset");

                    b.Property<int>("SuccessCount")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("StartTime");

                    b.ToTable("JobRuns");
                });

            modelBuilder.Entity("MkeAlerts.Web.Models.Data.Incidents.Crime", b =>
                {
                    b.Property<string>("IncidentNum")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<decimal>("ALD")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int?>("Accuracy")
                        .HasColumnType("int");

                    b.Property<int>("Arson")
                        .HasColumnType("int");

                    b.Property<int>("AssaultOffense")
                        .HasColumnType("int");

                    b.Property<int>("Burglary")
                        .HasColumnType("int");

                    b.Property<int>("CriminalDamage")
                        .HasColumnType("int");

                    b.Property<int>("Homicide")
                        .HasColumnType("int");

                    b.Property<DateTime?>("LastGeocodeAttempt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Location")
                        .HasColumnType("nvarchar(128)")
                        .HasMaxLength(128);

                    b.Property<int>("LockedVehicle")
                        .HasColumnType("int");

                    b.Property<decimal>("MaxLat")
                        .HasColumnType("decimal(13, 10)");

                    b.Property<decimal>("MaxLng")
                        .HasColumnType("decimal(13, 10)");

                    b.Property<decimal>("MinLat")
                        .HasColumnType("decimal(13, 10)");

                    b.Property<decimal>("MinLng")
                        .HasColumnType("decimal(13, 10)");

                    b.Property<decimal>("NSP")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("POLICE")
                        .HasColumnType("decimal(18,2)");

                    b.Property<Point>("Point")
                        .HasColumnType("geography");

                    b.Property<DateTime>("ReportedDateTime")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("ReportedMonth")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("ReportedYear")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("Robbery")
                        .HasColumnType("int");

                    b.Property<double>("RoughX")
                        .HasColumnType("float");

                    b.Property<double>("RoughY")
                        .HasColumnType("float");

                    b.Property<int>("SexOffense")
                        .HasColumnType("int");

                    b.Property<int?>("Source")
                        .HasColumnType("int");

                    b.Property<decimal>("TRACT")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("Theft")
                        .HasColumnType("int");

                    b.Property<int>("VehicleTheft")
                        .HasColumnType("int");

                    b.Property<decimal>("WARD")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("WeaponUsed")
                        .HasColumnType("nvarchar(128)")
                        .HasMaxLength(128);

                    b.Property<decimal>("ZIP")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("IncidentNum");

                    b.HasIndex("ReportedDateTime");

                    b.ToTable("Crimes");
                });

            modelBuilder.Entity("MkeAlerts.Web.Models.Data.Incidents.FireDispatchCall", b =>
                {
                    b.Property<string>("CFS")
                        .HasColumnType("nvarchar(12)")
                        .HasMaxLength(12);

                    b.Property<int?>("Accuracy")
                        .HasColumnType("int");

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("nvarchar(60)")
                        .HasMaxLength(60);

                    b.Property<string>("Apt")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("City")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("Disposition")
                        .HasColumnType("nvarchar(60)")
                        .HasMaxLength(60);

                    b.Property<Geometry>("Geometry")
                        .HasColumnType("geography");

                    b.Property<DateTime?>("LastGeocodeAttempt")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("MaxLat")
                        .HasColumnType("decimal(13, 10)");

                    b.Property<decimal>("MaxLng")
                        .HasColumnType("decimal(13, 10)");

                    b.Property<decimal>("MinLat")
                        .HasColumnType("decimal(13, 10)");

                    b.Property<decimal>("MinLng")
                        .HasColumnType("decimal(13, 10)");

                    b.Property<string>("NatureOfCall")
                        .IsRequired()
                        .HasColumnType("nvarchar(40)")
                        .HasMaxLength(40);

                    b.Property<DateTime>("ReportedDateTime")
                        .HasColumnType("datetime2");

                    b.Property<int?>("Source")
                        .HasColumnType("int");

                    b.HasKey("CFS");

                    b.HasIndex("ReportedDateTime");

                    b.ToTable("FireDispatchCalls");
                });

            modelBuilder.Entity("MkeAlerts.Web.Models.Data.Incidents.FireDispatchCallType", b =>
                {
                    b.Property<string>("NatureOfCall")
                        .HasColumnType("nvarchar(40)")
                        .HasMaxLength(40);

                    b.Property<bool>("IsCritical")
                        .HasColumnType("bit");

                    b.Property<bool>("IsFire")
                        .HasColumnType("bit");

                    b.Property<bool>("IsMedical")
                        .HasColumnType("bit");

                    b.HasKey("NatureOfCall");

                    b.ToTable("FireDispatchCallTypes");
                });

            modelBuilder.Entity("MkeAlerts.Web.Models.Data.Incidents.PoliceDispatchCall", b =>
                {
                    b.Property<string>("CallNumber")
                        .HasColumnType("nvarchar(12)")
                        .HasMaxLength(12);

                    b.Property<int?>("Accuracy")
                        .HasColumnType("int");

                    b.Property<int>("District")
                        .HasColumnType("int");

                    b.Property<Geometry>("Geometry")
                        .HasColumnType("geography");

                    b.Property<DateTime?>("LastGeocodeAttempt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Location")
                        .IsRequired()
                        .HasColumnType("nvarchar(60)")
                        .HasMaxLength(60);

                    b.Property<decimal>("MaxLat")
                        .HasColumnType("decimal(13, 10)");

                    b.Property<decimal>("MaxLng")
                        .HasColumnType("decimal(13, 10)");

                    b.Property<decimal>("MinLat")
                        .HasColumnType("decimal(13, 10)");

                    b.Property<decimal>("MinLng")
                        .HasColumnType("decimal(13, 10)");

                    b.Property<string>("NatureOfCall")
                        .IsRequired()
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<DateTime>("ReportedDateTime")
                        .HasColumnType("datetime2");

                    b.Property<int?>("Source")
                        .HasColumnType("int");

                    b.Property<string>("Status")
                        .HasColumnType("nvarchar(60)")
                        .HasMaxLength(60);

                    b.HasKey("CallNumber");

                    b.HasIndex("ReportedDateTime");

                    b.ToTable("PoliceDispatchCalls");
                });

            modelBuilder.Entity("MkeAlerts.Web.Models.Data.Incidents.PoliceDispatchCallType", b =>
                {
                    b.Property<string>("NatureOfCall")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<bool>("IsCritical")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDrug")
                        .HasColumnType("bit");

                    b.Property<bool>("IsOtherCrime")
                        .HasColumnType("bit");

                    b.Property<bool>("IsProperty")
                        .HasColumnType("bit");

                    b.Property<bool>("IsTraffic")
                        .HasColumnType("bit");

                    b.Property<bool>("IsViolent")
                        .HasColumnType("bit");

                    b.HasKey("NatureOfCall");

                    b.ToTable("PoliceDispatchCallTypes");
                });

            modelBuilder.Entity("MkeAlerts.Web.Models.Data.Places.Address", b =>
                {
                    b.Property<int>("ADDRESS_ID")
                        .HasColumnType("int");

                    b.Property<string>("ALT_ID")
                        .HasColumnType("nvarchar(15)")
                        .HasMaxLength(15);

                    b.Property<int>("BUILDING_I")
                        .HasColumnType("int");

                    b.Property<string>("CLINEID")
                        .HasColumnType("nvarchar(1)")
                        .HasMaxLength(1);

                    b.Property<string>("COMMENT")
                        .HasColumnType("nvarchar(140)")
                        .HasMaxLength(140);

                    b.Property<string>("DD_LAT")
                        .HasColumnType("nvarchar(1)")
                        .HasMaxLength(1);

                    b.Property<string>("DD_LONG")
                        .HasColumnType("nvarchar(1)")
                        .HasMaxLength(1);

                    b.Property<string>("DIR")
                        .HasColumnType("nvarchar(1)")
                        .HasMaxLength(1);

                    b.Property<string>("FULLADDR")
                        .HasColumnType("nvarchar(30)")
                        .HasMaxLength(30);

                    b.Property<string>("HOUSENO")
                        .HasColumnType("nvarchar(15)")
                        .HasMaxLength(15);

                    b.Property<string>("HOUSESX")
                        .HasColumnType("nvarchar(2)")
                        .HasMaxLength(2);

                    b.Property<int>("HouseNumber")
                        .HasColumnType("int");

                    b.Property<int>("MAILABLE")
                        .HasColumnType("int");

                    b.Property<string>("MUNI")
                        .HasColumnType("nvarchar(15)")
                        .HasMaxLength(15);

                    b.Property<decimal>("MaxLat")
                        .HasColumnType("decimal(13, 10)");

                    b.Property<decimal>("MaxLng")
                        .HasColumnType("decimal(13, 10)");

                    b.Property<decimal>("MinLat")
                        .HasColumnType("decimal(13, 10)");

                    b.Property<decimal>("MinLng")
                        .HasColumnType("decimal(13, 10)");

                    b.Property<int>("OBJECTID")
                        .HasColumnType("int");

                    b.Property<string>("PDIR")
                        .HasColumnType("nvarchar(1)")
                        .HasMaxLength(1);

                    b.Property<Point>("Point")
                        .HasColumnType("geography");

                    b.Property<string>("SOURCE")
                        .HasColumnType("nvarchar(36)")
                        .HasMaxLength(36);

                    b.Property<string>("SOURCE_ID")
                        .HasColumnType("nvarchar(21)")
                        .HasMaxLength(21);

                    b.Property<string>("STREET")
                        .HasColumnType("nvarchar(19)")
                        .HasMaxLength(19);

                    b.Property<string>("STTYPE")
                        .HasColumnType("nvarchar(4)")
                        .HasMaxLength(4);

                    b.Property<string>("TAG")
                        .HasColumnType("nvarchar(41)")
                        .HasMaxLength(41);

                    b.Property<string>("TAXKEY")
                        .HasColumnType("nvarchar(10)")
                        .HasMaxLength(10);

                    b.Property<string>("UNIT")
                        .HasColumnType("nvarchar(5)")
                        .HasMaxLength(5);

                    b.Property<string>("X")
                        .HasColumnType("nvarchar(1)")
                        .HasMaxLength(1);

                    b.Property<string>("Y")
                        .HasColumnType("nvarchar(1)")
                        .HasMaxLength(1);

                    b.Property<string>("ZIP_CODE")
                        .HasColumnType("nvarchar(9)")
                        .HasMaxLength(9);

                    b.HasKey("ADDRESS_ID");

                    b.HasIndex("TAXKEY");

                    b.HasIndex("DIR", "STREET", "STTYPE", "HouseNumber");

                    b.ToTable("Addresses");
                });

            modelBuilder.Entity("MkeAlerts.Web.Models.Data.Places.CommonParcel", b =>
                {
                    b.Property<int>("MAP_ID")
                        .HasColumnType("int");

                    b.Property<decimal>("MaxLat")
                        .HasColumnType("decimal(13, 10)");

                    b.Property<decimal>("MaxLng")
                        .HasColumnType("decimal(13, 10)");

                    b.Property<decimal>("MinLat")
                        .HasColumnType("decimal(13, 10)");

                    b.Property<decimal>("MinLng")
                        .HasColumnType("decimal(13, 10)");

                    b.Property<Geometry>("Outline")
                        .HasColumnType("geography");

                    b.HasKey("MAP_ID");

                    b.HasIndex("MaxLat");

                    b.HasIndex("MaxLng");

                    b.HasIndex("MinLat");

                    b.HasIndex("MinLng");

                    b.ToTable("CommonParcels");
                });

            modelBuilder.Entity("MkeAlerts.Web.Models.Data.Places.Parcel", b =>
                {
                    b.Property<string>("TAXKEY")
                        .HasColumnType("nvarchar(10)")
                        .HasMaxLength(10);

                    b.Property<double>("ACRES")
                        .HasColumnType("float");

                    b.Property<string>("ADDRESS")
                        .HasColumnType("nvarchar(32)")
                        .HasMaxLength(32);

                    b.Property<int>("ASSESSEDVA")
                        .HasColumnType("int");

                    b.Property<string>("ASSESSMENT")
                        .HasColumnType("nvarchar(88)")
                        .HasMaxLength(88);

                    b.Property<string>("CLASS")
                        .HasColumnType("nvarchar(1)")
                        .HasMaxLength(1);

                    b.Property<string>("CODE")
                        .HasColumnType("nvarchar(2)")
                        .HasMaxLength(2);

                    b.Property<string>("COMMENT")
                        .HasColumnType("nvarchar(84)")
                        .HasMaxLength(84);

                    b.Property<string>("CONDO_NAME")
                        .HasColumnType("nvarchar(74)")
                        .HasMaxLength(74);

                    b.Property<string>("DESCRIPTIO")
                        .HasColumnType("nvarchar(23)")
                        .HasMaxLength(23);

                    b.Property<string>("DWELLING_C")
                        .HasColumnType("nvarchar(8)")
                        .HasMaxLength(8);

                    b.Property<string>("EXM_CLASS_")
                        .HasColumnType("nvarchar(76)")
                        .HasMaxLength(76);

                    b.Property<string>("EXM_TYP")
                        .HasColumnType("nvarchar(3)")
                        .HasMaxLength(3);

                    b.Property<string>("EXM_TYP_DE")
                        .HasColumnType("nvarchar(94)")
                        .HasMaxLength(94);

                    b.Property<int>("FAIR_MKT_V")
                        .HasColumnType("int");

                    b.Property<double>("GIS_ACRES")
                        .HasColumnType("float");

                    b.Property<double>("GROSS_TAX")
                        .HasColumnType("float");

                    b.Property<string>("HOUSENR")
                        .HasColumnType("nvarchar(10)")
                        .HasMaxLength(10);

                    b.Property<string>("HOUSENRHI")
                        .HasColumnType("nvarchar(10)")
                        .HasMaxLength(10);

                    b.Property<string>("HOUSENRSFX")
                        .HasColumnType("nvarchar(3)")
                        .HasMaxLength(3);

                    b.Property<int>("HouseNumber")
                        .HasColumnType("int");

                    b.Property<int>("HouseNumberHigh")
                        .HasColumnType("int");

                    b.Property<int>("IMPVALUE")
                        .HasColumnType("int");

                    b.Property<int>("LANDVALUE")
                        .HasColumnType("int");

                    b.Property<string>("LEGALDESCR")
                        .HasColumnType("nvarchar(254)")
                        .HasMaxLength(254);

                    b.Property<int>("MAP_ID")
                        .HasColumnType("int");

                    b.Property<string>("MCD")
                        .HasColumnType("nvarchar(5)")
                        .HasMaxLength(5);

                    b.Property<string>("MUNINAME")
                        .HasColumnType("nvarchar(15)")
                        .HasMaxLength(15);

                    b.Property<double>("NET_TAX")
                        .HasColumnType("float");

                    b.Property<int>("OBJECTID")
                        .HasColumnType("int");

                    b.Property<int>("OVERLAP")
                        .HasColumnType("int");

                    b.Property<string>("OWNERADDR")
                        .HasColumnType("nvarchar(49)")
                        .HasMaxLength(49);

                    b.Property<string>("OWNERCTYST")
                        .HasColumnType("nvarchar(27)")
                        .HasMaxLength(27);

                    b.Property<string>("OWNERNAME1")
                        .HasColumnType("nvarchar(84)")
                        .HasMaxLength(84);

                    b.Property<string>("OWNERNAME2")
                        .HasColumnType("nvarchar(84)")
                        .HasMaxLength(84);

                    b.Property<string>("OWNERNAME3")
                        .HasColumnType("nvarchar(28)")
                        .HasMaxLength(28);

                    b.Property<string>("OWNERZIP")
                        .HasColumnType("nvarchar(10)")
                        .HasMaxLength(10);

                    b.Property<string>("PARCELNO")
                        .HasColumnType("nvarchar(10)")
                        .HasMaxLength(10);

                    b.Property<string>("PARCEL_DES")
                        .HasColumnType("nvarchar(30)")
                        .HasMaxLength(30);

                    b.Property<string>("PARCEL_KEY")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("PARCEL_TYP")
                        .HasColumnType("nvarchar(13)")
                        .HasMaxLength(13);

                    b.Property<string>("PAR_ZIP")
                        .HasColumnType("nvarchar(5)")
                        .HasMaxLength(5);

                    b.Property<string>("PAR_ZIP_EX")
                        .HasColumnType("nvarchar(4)")
                        .HasMaxLength(4);

                    b.Property<string>("POSTOFFICE")
                        .HasColumnType("nvarchar(15)")
                        .HasMaxLength(15);

                    b.Property<int>("RECID")
                        .HasColumnType("int");

                    b.Property<string>("RECSOURCE")
                        .HasColumnType("nvarchar(7)")
                        .HasMaxLength(7);

                    b.Property<string>("SCHOOL_DIS")
                        .HasColumnType("nvarchar(41)")
                        .HasMaxLength(41);

                    b.Property<string>("SCHOOL_ID")
                        .HasColumnType("nvarchar(4)")
                        .HasMaxLength(4);

                    b.Property<string>("SOURCE")
                        .HasColumnType("nvarchar(39)")
                        .HasMaxLength(39);

                    b.Property<string>("STREETDIR")
                        .HasColumnType("nvarchar(2)")
                        .HasMaxLength(2);

                    b.Property<string>("STREETNAME")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<string>("STREETTYPE")
                        .HasColumnType("nvarchar(4)")
                        .HasMaxLength(4);

                    b.Property<string>("SUFFIXDIR")
                        .HasColumnType("nvarchar(2)")
                        .HasMaxLength(2);

                    b.Property<string>("TAX_INFO_U")
                        .HasColumnType("nvarchar(1)")
                        .HasMaxLength(1);

                    b.Property<int>("TAX_YR")
                        .HasColumnType("int");

                    b.Property<string>("UNITNUMBER")
                        .HasColumnType("nvarchar(8)")
                        .HasMaxLength(8);

                    b.Property<string>("UNIT_TYPE")
                        .HasColumnType("nvarchar(7)")
                        .HasMaxLength(7);

                    b.Property<string>("ZONING_COD")
                        .HasColumnType("nvarchar(1)")
                        .HasMaxLength(1);

                    b.Property<string>("ZONING_DES")
                        .HasColumnType("nvarchar(29)")
                        .HasMaxLength(29);

                    b.Property<string>("ZONING_URL")
                        .HasColumnType("nvarchar(88)")
                        .HasMaxLength(88);

                    b.HasKey("TAXKEY");

                    b.HasIndex("MAP_ID");

                    b.HasIndex("STREETDIR", "STREETNAME", "STREETTYPE", "HouseNumber");

                    b.ToTable("Parcels");
                });

            modelBuilder.Entity("MkeAlerts.Web.Models.Data.Places.Property", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("AIR_CONDITIONING")
                        .HasColumnType("nvarchar(3)")
                        .HasMaxLength(3);

                    b.Property<string>("ATTIC")
                        .HasColumnType("nvarchar(1)")
                        .HasMaxLength(1);

                    b.Property<string>("BASEMENT")
                        .HasColumnType("nvarchar(1)")
                        .HasMaxLength(1);

                    b.Property<int?>("BATHS")
                        .HasColumnType("int");

                    b.Property<int?>("BEDROOMS")
                        .HasColumnType("int");

                    b.Property<int?>("BLDG_AREA")
                        .HasColumnType("int");

                    b.Property<string>("BLDG_TYPE")
                        .HasColumnType("nvarchar(9)")
                        .HasMaxLength(9);

                    b.Property<string>("CHK_DIGIT")
                        .HasColumnType("nvarchar(1)")
                        .HasMaxLength(1);

                    b.Property<DateTime?>("CONVEY_DATE")
                        .HasColumnType("datetime2");

                    b.Property<float?>("CONVEY_FEE")
                        .HasColumnType("real");

                    b.Property<string>("CONVEY_TYPE")
                        .HasColumnType("nvarchar(2)")
                        .HasMaxLength(2);

                    b.Property<string>("C_A_CLASS")
                        .HasColumnType("nvarchar(1)")
                        .HasMaxLength(1);

                    b.Property<int?>("C_A_EXM_IMPRV")
                        .HasColumnType("int");

                    b.Property<int?>("C_A_EXM_LAND")
                        .HasColumnType("int");

                    b.Property<int?>("C_A_EXM_TOTAL")
                        .HasColumnType("int");

                    b.Property<string>("C_A_EXM_TYPE")
                        .HasColumnType("nvarchar(3)")
                        .HasMaxLength(3);

                    b.Property<int?>("C_A_IMPRV")
                        .HasColumnType("int");

                    b.Property<int?>("C_A_LAND")
                        .HasColumnType("int");

                    b.Property<string>("C_A_SYMBOL")
                        .HasColumnType("nvarchar(1)")
                        .HasMaxLength(1);

                    b.Property<int?>("C_A_TOTAL")
                        .HasColumnType("int");

                    b.Property<int?>("DIV_ORG")
                        .HasColumnType("int");

                    b.Property<string>("FIREPLACE")
                        .HasColumnType("nvarchar(1)")
                        .HasMaxLength(1);

                    b.Property<string>("GARAGE_TYPE")
                        .HasColumnType("nvarchar(2)")
                        .HasMaxLength(2);

                    b.Property<int?>("GEO_ALDER")
                        .HasColumnType("int");

                    b.Property<int?>("GEO_ALDER_OLD")
                        .HasColumnType("int");

                    b.Property<string>("GEO_BLOCK")
                        .HasColumnType("nvarchar(4)")
                        .HasMaxLength(4);

                    b.Property<int?>("GEO_POLICE")
                        .HasColumnType("int");

                    b.Property<int?>("GEO_TRACT")
                        .HasColumnType("int");

                    b.Property<int?>("GEO_ZIP_CODE")
                        .HasColumnType("int");

                    b.Property<string>("HIST_CODE")
                        .HasColumnType("nvarchar(1)")
                        .HasMaxLength(1);

                    b.Property<int?>("HOUSE_NR_HI")
                        .HasColumnType("int");

                    b.Property<int?>("HOUSE_NR_LO")
                        .HasColumnType("int");

                    b.Property<string>("HOUSE_NR_SFX")
                        .HasColumnType("nvarchar(3)")
                        .HasMaxLength(3);

                    b.Property<string>("LAND_USE")
                        .HasColumnType("nvarchar(4)")
                        .HasMaxLength(4);

                    b.Property<string>("LAND_USE_GP")
                        .HasColumnType("nvarchar(2)")
                        .HasMaxLength(2);

                    b.Property<DateTime?>("LAST_NAME_CHG")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("LAST_VALUE_CHG")
                        .HasColumnType("datetime2");

                    b.Property<int?>("LOT_AREA")
                        .HasColumnType("int");

                    b.Property<string>("NEIGHBORHOOD")
                        .HasColumnType("nvarchar(8)")
                        .HasMaxLength(8);

                    b.Property<float?>("NR_STORIES")
                        .HasColumnType("real");

                    b.Property<int?>("NR_UNITS")
                        .HasColumnType("int");

                    b.Property<string>("OWNER_CITY_STATE")
                        .HasColumnType("nvarchar(28)")
                        .HasMaxLength(28);

                    b.Property<string>("OWNER_MAIL_ADDR")
                        .HasColumnType("nvarchar(28)")
                        .HasMaxLength(28);

                    b.Property<string>("OWNER_NAME_1")
                        .HasColumnType("nvarchar(28)")
                        .HasMaxLength(28);

                    b.Property<string>("OWNER_NAME_2")
                        .HasColumnType("nvarchar(28)")
                        .HasMaxLength(28);

                    b.Property<string>("OWNER_NAME_3")
                        .HasColumnType("nvarchar(28)")
                        .HasMaxLength(28);

                    b.Property<string>("OWNER_ZIP")
                        .HasColumnType("nvarchar(9)")
                        .HasMaxLength(9);

                    b.Property<string>("OWN_OCPD")
                        .HasColumnType("nvarchar(1)")
                        .HasMaxLength(1);

                    b.Property<string>("PLAT_PAGE")
                        .HasColumnType("nvarchar(5)")
                        .HasMaxLength(5);

                    b.Property<int?>("POWDER_ROOMS")
                        .HasColumnType("int");

                    b.Property<string>("P_A_CLASS")
                        .HasColumnType("nvarchar(1)")
                        .HasMaxLength(1);

                    b.Property<int?>("P_A_EXM_IMPRV")
                        .HasColumnType("int");

                    b.Property<int?>("P_A_EXM_LAND")
                        .HasColumnType("int");

                    b.Property<int?>("P_A_EXM_TOTAL")
                        .HasColumnType("int");

                    b.Property<int?>("P_A_IMPRV")
                        .HasColumnType("int");

                    b.Property<int?>("P_A_LAND")
                        .HasColumnType("int");

                    b.Property<string>("P_A_SYMBOL")
                        .HasColumnType("nvarchar(4)")
                        .HasMaxLength(4);

                    b.Property<int?>("P_A_TOTAL")
                        .HasColumnType("int");

                    b.Property<string>("REASON_FOR_CHG")
                        .HasColumnType("nvarchar(3)")
                        .HasMaxLength(3);

                    b.Property<string>("SDIR")
                        .HasColumnType("nvarchar(1)")
                        .HasMaxLength(1);

                    b.Property<string>("STREET")
                        .HasColumnType("nvarchar(18)")
                        .HasMaxLength(18);

                    b.Property<string>("STTYPE")
                        .HasColumnType("nvarchar(2)")
                        .HasMaxLength(2);

                    b.Property<string>("Source")
                        .HasColumnType("nvarchar(12)")
                        .HasMaxLength(12);

                    b.Property<DateTime>("SourceDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("TAXKEY")
                        .HasColumnType("nvarchar(10)")
                        .HasMaxLength(10);

                    b.Property<string>("TAX_RATE_CD")
                        .HasColumnType("nvarchar(2)")
                        .HasMaxLength(2);

                    b.Property<string>("YR_ASSMT")
                        .HasColumnType("nvarchar(4)")
                        .HasMaxLength(4);

                    b.Property<int?>("YR_BUILT")
                        .HasColumnType("int");

                    b.Property<string>("ZONING")
                        .HasColumnType("nvarchar(7)")
                        .HasMaxLength(7);

                    b.HasKey("Id");

                    b.HasIndex("TAXKEY");

                    b.ToTable("Properties");
                });

            modelBuilder.Entity("MkeAlerts.Web.Models.Data.Places.Street", b =>
                {
                    b.Property<int>("CLINEID")
                        .HasColumnType("int");

                    b.Property<string>("COMMENT")
                        .HasColumnType("nvarchar(1)")
                        .HasMaxLength(1);

                    b.Property<string>("DATE_CHANG")
                        .HasColumnType("nvarchar(1)")
                        .HasMaxLength(1);

                    b.Property<string>("DIR")
                        .HasColumnType("nvarchar(2)")
                        .HasMaxLength(2);

                    b.Property<string>("FCC")
                        .HasColumnType("nvarchar(3)")
                        .HasMaxLength(3);

                    b.Property<string>("HIGH")
                        .HasColumnType("nvarchar(5)")
                        .HasMaxLength(5);

                    b.Property<string>("HIGHWAY")
                        .HasColumnType("nvarchar(16)")
                        .HasMaxLength(16);

                    b.Property<string>("LEFTFR")
                        .HasColumnType("nvarchar(5)")
                        .HasMaxLength(5);

                    b.Property<string>("LEFTTO")
                        .HasColumnType("nvarchar(5)")
                        .HasMaxLength(5);

                    b.Property<string>("LOW")
                        .HasColumnType("nvarchar(5)")
                        .HasMaxLength(5);

                    b.Property<string>("L_MCD")
                        .HasColumnType("nvarchar(5)")
                        .HasMaxLength(5);

                    b.Property<int>("LeftNumberHigh")
                        .HasColumnType("int");

                    b.Property<int>("LeftNumberLow")
                        .HasColumnType("int");

                    b.Property<string>("MUNI")
                        .HasColumnType("nvarchar(15)")
                        .HasMaxLength(15);

                    b.Property<decimal>("MaxLat")
                        .HasColumnType("decimal(13, 10)");

                    b.Property<decimal>("MaxLng")
                        .HasColumnType("decimal(13, 10)");

                    b.Property<decimal>("MinLat")
                        .HasColumnType("decimal(13, 10)");

                    b.Property<decimal>("MinLng")
                        .HasColumnType("decimal(13, 10)");

                    b.Property<int>("OBJECTID")
                        .HasColumnType("int");

                    b.Property<string>("OWNER")
                        .HasColumnType("nvarchar(1)")
                        .HasMaxLength(1);

                    b.Property<Geometry>("Outline")
                        .HasColumnType("geography");

                    b.Property<string>("PDIR")
                        .HasColumnType("nvarchar(1)")
                        .HasMaxLength(1);

                    b.Property<string>("RIGHTFR")
                        .HasColumnType("nvarchar(5)")
                        .HasMaxLength(5);

                    b.Property<string>("RIGHTTO")
                        .HasColumnType("nvarchar(5)")
                        .HasMaxLength(5);

                    b.Property<string>("R_MCD")
                        .HasColumnType("nvarchar(5)")
                        .HasMaxLength(5);

                    b.Property<int>("RightNumberHigh")
                        .HasColumnType("int");

                    b.Property<int>("RightNumberLow")
                        .HasColumnType("int");

                    b.Property<string>("SHIELD")
                        .HasColumnType("nvarchar(1)")
                        .HasMaxLength(1);

                    b.Property<string>("SOURCE")
                        .HasColumnType("nvarchar(1)")
                        .HasMaxLength(1);

                    b.Property<string>("STREET")
                        .HasColumnType("nvarchar(24)")
                        .HasMaxLength(24);

                    b.Property<string>("STTYPE")
                        .HasColumnType("nvarchar(4)")
                        .HasMaxLength(4);

                    b.HasKey("CLINEID");

                    b.HasIndex("MaxLat");

                    b.HasIndex("MaxLng");

                    b.HasIndex("MinLat");

                    b.HasIndex("MinLng");

                    b.HasIndex("DIR", "STREET", "STTYPE");

                    b.ToTable("Streets");
                });

            modelBuilder.Entity("MkeAlerts.Web.Models.Data.Subscriptions.DispatchCallSubscription", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ApplicationUserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("DispatchCallType")
                        .HasColumnType("int");

                    b.Property<int>("Distance")
                        .HasColumnType("int");

                    b.Property<int>("HOUSE_NR")
                        .HasColumnType("int");

                    b.Property<Point>("Point")
                        .HasColumnType("geography");

                    b.Property<string>("SDIR")
                        .HasColumnType("nvarchar(1)")
                        .HasMaxLength(1);

                    b.Property<string>("STREET")
                        .HasColumnType("nvarchar(18)")
                        .HasMaxLength(18);

                    b.Property<string>("STTYPE")
                        .HasColumnType("nvarchar(2)")
                        .HasMaxLength(2);

                    b.HasKey("Id");

                    b.HasIndex("ApplicationUserId");

                    b.ToTable("DispatchCallSubscriptions");
                });

            modelBuilder.Entity("MkeAlerts.Web.Models.Data.Subscriptions.PickupDatesSubscription", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ApplicationUserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("HoursBefore")
                        .HasColumnType("int");

                    b.Property<string>("LADDR")
                        .HasColumnType("nvarchar(10)")
                        .HasMaxLength(10);

                    b.Property<DateTime?>("NextGarbagePickupDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("NextGarbagePickupNotification")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("NextRecyclingPickupDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("NextRecyclingPickupNotification")
                        .HasColumnType("datetime2");

                    b.Property<string>("SDIR")
                        .HasColumnType("nvarchar(1)")
                        .HasMaxLength(1);

                    b.Property<string>("SNAME")
                        .HasColumnType("nvarchar(18)")
                        .HasMaxLength(18);

                    b.Property<string>("STYPE")
                        .HasColumnType("nvarchar(2)")
                        .HasMaxLength(2);

                    b.HasKey("Id");

                    b.HasIndex("ApplicationUserId");

                    b.ToTable("PickupDateSubscriptions");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<System.Guid>", b =>
                {
                    b.HasOne("MkeAlerts.Web.Models.Data.Accounts.ApplicationRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<System.Guid>", b =>
                {
                    b.HasOne("MkeAlerts.Web.Models.Data.Accounts.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<System.Guid>", b =>
                {
                    b.HasOne("MkeAlerts.Web.Models.Data.Accounts.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<System.Guid>", b =>
                {
                    b.HasOne("MkeAlerts.Web.Models.Data.Accounts.ApplicationRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MkeAlerts.Web.Models.Data.Accounts.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<System.Guid>", b =>
                {
                    b.HasOne("MkeAlerts.Web.Models.Data.Accounts.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("MkeAlerts.Web.Models.Data.Accounts.ExternalCredential", b =>
                {
                    b.HasOne("MkeAlerts.Web.Models.Data.Accounts.ApplicationUser", "ApplicationUser")
                        .WithMany("ExternalCredentials")
                        .HasForeignKey("ApplicationUserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("MkeAlerts.Web.Models.Data.Places.Address", b =>
                {
                    b.HasOne("MkeAlerts.Web.Models.Data.Places.Parcel", "Parcel")
                        .WithMany("Addresses")
                        .HasForeignKey("TAXKEY");
                });

            modelBuilder.Entity("MkeAlerts.Web.Models.Data.Places.Parcel", b =>
                {
                    b.HasOne("MkeAlerts.Web.Models.Data.Places.CommonParcel", "CommonParcel")
                        .WithMany("Parcels")
                        .HasForeignKey("MAP_ID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("MkeAlerts.Web.Models.Data.Places.Property", b =>
                {
                    b.HasOne("MkeAlerts.Web.Models.Data.Places.Parcel", "Parcel")
                        .WithMany("Properties")
                        .HasForeignKey("TAXKEY");
                });

            modelBuilder.Entity("MkeAlerts.Web.Models.Data.Subscriptions.DispatchCallSubscription", b =>
                {
                    b.HasOne("MkeAlerts.Web.Models.Data.Accounts.ApplicationUser", "ApplicationUser")
                        .WithMany("DispatchCallSubscriptions")
                        .HasForeignKey("ApplicationUserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("MkeAlerts.Web.Models.Data.Subscriptions.PickupDatesSubscription", b =>
                {
                    b.HasOne("MkeAlerts.Web.Models.Data.Accounts.ApplicationUser", "ApplicationUser")
                        .WithMany("PickupDateSubscriptions")
                        .HasForeignKey("ApplicationUserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
